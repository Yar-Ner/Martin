import speech_recognition as sr
import pyttsx3
from bs4 import BeautifulSoup
import requests
import webbrowser
import time
from tkinter import *
from tkinter import messagebox
import keyboard
from pyowm import OWM
from pyowm.utils import config
from pyowm.utils import timestamps
import datetime
import os


def kurs(val):
	pdg = 'https://www.google.ru/search?q={}+к+рублю&newwindow=1&sxsrf=ALiCzsbblFiCeG57Umy8MY79Y9LCpNySXQ%3A1657117043517&source=hp&ei=c5nFYproHKq_xc8PisKU2AY&iflsig=AJiK0e8AAAAAYsWng8wGI9wy0KEaIB5Xyi-ECwFv6wO5&ved=0ahUKEwja7eiFuuT4AhWqX_EDHQohBWsQ4dUDCAc&uact=5&oq=доллар+к+рублю&gs_lcp=Cgdnd3Mtd2l6EAMyEAgAEIAEELEDEIMBEEYQggIyCwgAEIAEELEDEIMBMgsIABCABBCxAxCDATILCAAQgAQQsQMQgwEyCwgAEIAEELEDEIMBMgUIABCABDIFCAAQgAQyBQgAEIAEMgUIABCABDIFCAAQgAQ6BAgjECc6EQguEIAEELEDEIMBEMcBEKMCOgUILhCABDoOCC4QgAQQsQMQgwEQ1AI6CAgAEIAEELEDOg4IABCABBCxAxCDARDJAzoICAAQsQMQgwE6CAguEIAEELEDUABYpRVgphtoAHAAeACAAfwGiAHmIpIBDTAuMS4zLjMuMS4yLjGYAQCgAQE&sclient=gws-wiz'.format(val)
	headers = {'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.160 YaBrowser/22.5.2.612 Yowser/2.5 Safari/537.36'}
	full_pdg = requests.get(pdg, headers=headers)

	soup = BeautifulSoup(full_pdg.content, 'lxml')
	convert = soup.findAll("span", {"class" : "DFlfde SwHCTb"})

	return convert[0].text


engine = pyttsx3.init()

owm = OWM('586eb7f9a57d72046bcebd873e656736')
mgr = owm.weather_manager()

r = sr.Recognizer()

def main():

	with sr.Microphone(device_index=1) as source:
		engine.say("Я вас слушаю....")
		engine.runAndWait()
		print("Я вас слушаю....")
		audio = r.listen(source)
	try:
		query = r.recognize_google(audio, language="ru-RU")
	except sr.UnknownValueError:
		print("Моё твоё не понимаит")

		# print(query)


	if 'прив' in query.lower() or 'здрав' in query.lower() or 'добрый день' in query.lower() or 'салют' in query.lower():
		engine.say('Приветствую')
		engine.runAndWait()
		print("Приветствую!")

	elif 'курс валют' in query.lower():
		with sr.Microphone(device_index=1) as source:
			engine.say("Какая валюта вас интересует")
			engine.runAndWait()
			print("Какая валюта вас интересует?")
			audio = r.listen(source)
		try:
			query = r.recognize_google(audio, language="ru-RU")
		except speech_recognition.UnknownValueError:
			print("Моё твоё не понимаит")
		valute = kurs(query)
		print(valute)
		engine.say(valute)
		engine.runAndWait()

	elif 'открой сайт' in query.lower():
		with sr.Microphone(device_index=1) as source:
			engine.say("Ютуб Яндекс или Вк?")
			engine.runAndWait()
			print("Ютуб/Яндекс/Вк?")
			audio = r.listen(source)
		try:
			query = r.recognize_google(audio, language="ru-RU")
			print(query)
		except speech_recognition.UnknownValueError:
			print("Моё твоё не понимаит")


		if 'яндекс' in query.lower():
			webbrowser.open('http://www.yandex.ru', new=2)
		elif 'вк' in query.lower() or 'вконтакте' in query.lower():
			webbrowser.open('http://www.vk.com', new=2)
		elif 'ютуб' in query.lower() or 'ютуп' in query.lower() or 'youtube' in query.lower():
			webbrowser.open('http://www.youtube.com', new=2)

	elif 'таймер' in query.lower():
		root = Tk()
  
# setting geometry of tk window
		root.geometry("300x250")
		  
		# Using title() to display a message in
		# the dialogue box of the message in the
		# title bar.
		root.title("Time Counter")
		  
		# Declaration of variables
		hour=StringVar()
		minute=StringVar()
		second=StringVar()
		  
		# setting the default value as 0
		hour.set("00")
		minute.set("00")
		second.set("00")
		  
		# Use of Entry class to take input from the user
		hourEntry= Entry(root, width=3, font=("Arial",18,""),
		                 textvariable=hour)
		hourEntry.place(x=80,y=20)
		  
		minuteEntry= Entry(root, width=3, font=("Arial",18,""),
		                   textvariable=minute)
		minuteEntry.place(x=130,y=20)
		  
		secondEntry= Entry(root, width=3, font=("Arial",18,""),
		                   textvariable=second)
		secondEntry.place(x=180,y=20)
		  


		  
		def submit():
		    try:
		        # the input provided by the user is
		        # stored in here :temp
		        temp = int(hour.get())*3600 + int(minute.get())*60 + int(second.get())
		    except:
		        print("Please input the right value")
		    while temp >-1:
		         
		        # divmod(firstvalue = temp//60, secondvalue = temp%60)
		        mins,secs = divmod(temp,60)
		  
		        # Converting the input entered in mins or secs to hours,
		        # mins ,secs(input = 110 min --> 120*60 = 6600 => 1hr :
		        # 50min: 0sec)
		        hours=0
		        if mins >60:
		             
		            # divmod(firstvalue = temp//60, secondvalue
		            # = temp%60)
		            hours, mins = divmod(mins, 60)
		         
		        # using format () method to store the value up to
		        # two decimal places
		        hour.set("{0:2d}".format(hours))
		        minute.set("{0:2d}".format(mins))
		        second.set("{0:2d}".format(secs))
		  
		        # updating the GUI window after decrementing the
		        # temp value every time
		        root.update()
		        time.sleep(1)
		  
		        # when temp value = 0; then a messagebox pop's up
		        # with a message:"Time's up"
		        if (temp == 0):
		            messagebox.showinfo("", "Время вышло")
		            engine.say("Время вышло")
		            engine.runAndWait()
		         
		        # after every one sec the value of temp will be decremented
		        # by one
		        temp -= 1
		 
		# button widget
		btn = Button(root, text="Введите нужное время ч/м/с", bd='5',
		             command= submit)
		btn.place(x = 70,y = 120)

		root.mainloop()
	elif 'как тебя зовут' in query.lower() or 'как твоё имя' in query.lower():
		print("Моё имя Мартин")
		engine.say("Моё имя Мартин")
		engine.runAndWait()
	elif 'как дела' in query.lower() or 'как жизнь' in query.lower() or 'как ты' in query.lower() or 'ты как' in query.lower():
		with sr.Microphone(device_index=1) as source:
			print("У меня всё прекрасно! Вы как?")
			engine.say("У меня всё прекрасно! Вы как?")
			engine.runAndWait()
			audio = r.listen(source)
		try:
			query = r.recognize_google(audio, language="ru-RU")
		except sr.UnknownValueError:
			print("Моё твоё не понимаит")

		if 'отлично' in query.lower() or 'прекрасно'  in query.lower() or 'норм'   in query.lower() or 'хорош' in query.lower():
			print("Это прекрасно! Я рад за вас!")
			engine.say("Это прекрасно! Я рад за вас!")
			engine.runAndWait()
		else:
			print("Не хорошо это")
			engine.say("Не хорошо это")
			engine.runAndWait()
			print("А что случилось?")
			engine.say("А что случилось?")
			engine.runAndWait()
			with sr.Microphone(device_index=1) as source:
				audio = r.listen(source)
			try:
				query = r.recognize_google(audio, language="ru-RU")
			except speech_recognition.UnknownValueError:
				print("Моё твоё не понимаит")
			print("Ох, это плохо конечно")
			engine.say("Ох, это плохо конечно")
			engine.runAndWait()
	elif 'погода' in query.lower():
		with sr.Microphone(device_index=1) as source:
			print("Какой город вас интересует?")
			engine.say("Какой город вас интересует?")
			engine.runAndWait()
			audio = r.listen(source)
		try:
			query = r.recognize_google(audio, language="ru-RU")
		except sr.UnknownValueError:
			print("Моё твоё не понимаит")

		observation = mgr.weather_at_place(query)
		w = observation.weather
		print(round(w.temperature('celsius')['temp']))
		engine.say(round(w.temperature('celsius')['temp']))
	elif 'что делае' in query.lower() or 'чем занимаешься' in query.lower():
		print("Сижу в библиотеке и учусь")
		engine.say("Сижу в библиотеке и учусь")
	elif 'сколько лет' in query.lower():
		print("Дерево не тонет,\nрукописи не горят,\nтехнологии не стареют")
		engine.say("Дерево не тонет, рукописи не горят, технологии не стареют")
		engine.runAndWait()
	elif 'дата' in query.lower() or 'дату' in query.lower():
		print(datetime.date.today())
		engine.say(datetime.date.today())
		engine.runAndWait()
	elif 'сколько времени' in query.lower() or 'который час' in query.lower():
		now = datetime.datetime.now()
		current_time = now.strftime("%H:%M:%S")
		print(current_time)
		engine.say(current_time)
		engine.runAndWait()
	elif 'выключи комп' in query.lower():
		os.system("shutdown /s /t 1")


engine.say("Мартин к вашим услугам")
engine.runAndWait()

while True:
	if input("cmnd: ") == "слушай":
		main()
